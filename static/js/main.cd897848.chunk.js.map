{"version":3,"sources":["components/InputForm.js","components/TodoItem.js","components/todoState.js","App.js","reportWebVitals.js","index.js"],"names":["InputForm","props","state","item","description","date","format","Date","priority","completed","handleChange","bind","e","target","name","value","this","setState","bin","className","onSubmit","handleSubmit","onReset","onChange","type","required","React","Component","TodoItem","isEditing","object","editTask","prevState","input","console","log","callSubmit","id","cache","reset","handleNoSubmission","checked","style","fontSize","color","textDecoration","onClick","deleteTask","TodoState","todos","tasksArray","sentState","newTd","map","todo","localStorage","setItem","JSON","stringify","filter","low","medium","high","br","todoItems","App","parse","getItem","context","uniqid","preventDefault","concat","submit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd897848.chunk.js","sourcesContent":["import React from \"react\";\nimport { format } from \"date-fns\";\n\nclass InputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props.item || {\n      description: \"\",\n      date: format(new Date(), \"yyyy-MM-dd\"),\n      priority: \"medium\",\n      completed: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      ...this.state,\n\n      [name]: value,\n    });\n  }\n\n  render() {\n    const bin = this.props.item;\n\n    return (\n      <form\n        className=\"input-form\"\n        onSubmit={(e) => {\n          this.props.handleSubmit(e, this.state, this);\n          this.setState({\n            description: \"\",\n            date: format(new Date(), \"yyyy-MM-dd\"),\n            priority: \"medium\",\n            completed: false,\n          });\n        }}\n        onReset={(e) => {\n          //e.preventDefault();\n          this.setState({\n            state: bin,\n          });\n        }}\n      >\n        <input\n          onChange={this.handleChange}\n          value={this.state.description}\n          name=\"description\"\n          type=\"text\"\n          required\n        />\n        <input\n          required\n          onChange={this.handleChange}\n          value={this.state.date}\n          name=\"date\"\n          type=\"date\"\n        />\n        <select\n          onChange={this.handleChange}\n          value={this.state.priority}\n          name=\"priority\"\n          required\n        >\n          <option value=\"low\">Low</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"high\">High</option>\n        </select>\n\n        <label>\n          <input type=\"submit\" value=\"submit\" />\n        </label>\n        <label>\n          <input type=\"reset\" value=\"Reset\" />\n        </label>\n      </form>\n    );\n  }\n}\nexport default InputForm;\n","import React from \"react\";\nimport InputForm from \"./InputForm\";\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    //this.cache = this.props.item;\n    this.state = {\n      isEditing: false,\n      object: this.props.item,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.editTask = this.editTask.bind(this);\n  }\n  editTask() {\n    this.setState((prevState) => ({\n      isEditing: true,\n      ...this.prevState,\n    }));\n    //console.log(this.state.isEditing);\n  }\n  handleSubmit(e, input) {\n    console.log(input);\n    this.setState(\n      {\n        object: input,\n        isEditing: false,\n      },\n      (e) => this.props.callSubmit(e, this.props.item.id, this.state.object)\n    );\n    //e.target.submit();\n  }\n  handleNoSubmission(e) {\n    this.setState(this.cache);\n    e.target.reset();\n  }\n\n  render() {\n    const completedStyle = {\n      fontSize: \"italic\",\n      color: \"#cdcdcd\",\n      textDecoration: \"line-through\",\n    };\n    if (this.state.isEditing) {\n      return (\n        <InputForm\n          item={this.props.item}\n          handleNoSubmission={this.handleNoSubmission}\n          handleSubmit={this.handleSubmit}\n        />\n      );\n    } else {\n      return (\n        <div className=\"todo-item\">\n          <input\n            type=\"checkbox\"\n            checked={this.props.item.completed}\n            onChange={(e) => {\n              this.props.handleChange(this.props.item.id);\n            }}\n          />\n          <div style={this.props.item.completed ? completedStyle : null}>\n            <span>Note: {this.props.item.description}, </span>\n            <span>Date: {this.props.item.date}, </span>\n            <span>Priority: {this.props.item.priority}.</span>{\" \"}\n          </div>\n          <button onClick={this.editTask}> Edit </button>\n\n          <button onClick={(e) => this.props.deleteTask(e, this.props.item.id)}>\n            Delete\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport css from \"../App.css\";\nclass TodoState extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: this.props.tasksArray || [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    //this.handleSubmit = this.handleSubmit.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.callSubmit = this.callSubmit.bind(this);\n  }\n  callSubmit(e, id, sentState) {\n    this.setState(\n      (prevState) => {\n        const newTd = prevState.todos.map((todo) => {\n          if (todo.id === id) {\n            todo = sentState;\n            return todo;\n          } else {\n            return todo;\n          }\n        });\n        console.log(newTd);\n\n        return {\n          todos: newTd,\n        };\n      },\n      (e) =>\n        localStorage.setItem(\"tasksArray\", JSON.stringify(this.state.todos))\n    );\n  }\n\n  deleteTask(e, id) {\n    this.setState(\n      (prevState) => {\n        const newTd = prevState.todos.filter((todo) => {\n          return todo.id === id ? false : todo;\n        });\n        console.log(newTd);\n\n        return {\n          todos: newTd,\n        };\n      },\n      (e) =>\n        localStorage.setItem(\"tasksArray\", JSON.stringify(this.state.todos))\n    );\n  }\n  handleChange(id) {\n    this.setState(\n      (prevState) => {\n        const newTodos = prevState.todos.map((todo) => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              completed: !todo.completed,\n            };\n          }\n          return todo;\n        });\n        return {\n          todos: newTodos,\n        };\n      },\n      (e) =>\n        localStorage.setItem(\"tasksArray\", JSON.stringify(this.state.todos))\n    );\n  }\n  render() {\n    /* const todoItems = this.state.todos.map((item) => (\n      <TodoItem\n        key={item.id}\n        item={item}\n        callSubmit={this.callSubmit}\n        deleteTask={this.deleteTask}\n        handleChange={this.handleChange}\n      />\n    ));\n */\n    const low = this.state.todos\n      .filter((item) => {\n        return item.priority === \"low\";\n      })\n      .map((item) => (\n        <TodoItem\n          key={item.id}\n          item={item}\n          callSubmit={this.callSubmit}\n          deleteTask={this.deleteTask}\n          handleChange={this.handleChange}\n        />\n      ));\n\n    const medium = this.state.todos\n      .filter((item) => {\n        return item.priority === \"medium\";\n      })\n      .map((item) => (\n        <TodoItem\n          key={item.id}\n          item={item}\n          callSubmit={this.callSubmit}\n          deleteTask={this.deleteTask}\n          handleChange={this.handleChange}\n        />\n      ));\n    const high = this.state.todos\n      .filter((item) => {\n        return item.priority === \"high\";\n      })\n      .map((item) => (\n        <div>\n          <TodoItem\n            key={item.id}\n            item={item}\n            callSubmit={this.callSubmit}\n            deleteTask={this.deleteTask}\n            handleChange={this.handleChange}\n          />\n          <br />\n        </div>\n      ));\n    const br = (input = null) => {\n      return (\n        <div>\n          <br />\n          {input}\n          <hr />\n        </div>\n      );\n    };\n    const todoItems = [\n      br(\"High Priority\"),\n      ...high,\n      br(\"Medium Priority\"),\n      ...medium,\n      br(\"Low Priority\"),\n      ...low,\n    ];\n\n    return (\n      <div>\n        <div className=\"todo-list\">{todoItems}</div>\n      </div>\n    );\n  }\n}\n\nexport default TodoState;\n","import React, { Component } from \"react\";\nimport TodoState from \"./components/todoState\";\nimport InputForm from \"./components/InputForm\";\nimport uniqid from \"uniqid\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      tasksArray: JSON.parse(localStorage.getItem(\"tasksArray\")) ?? [],\n    };\n  }\n  handleSubmit(e, input, context) {\n    input.id = uniqid();\n\n    e.preventDefault();\n    this.setState(\n      (prevState) => ({\n        tasksArray: prevState.tasksArray.concat(input),\n      }),\n      () => {\n        localStorage.setItem(\n          \"tasksArray\",\n          JSON.stringify(this.state.tasksArray)\n        );\n      }\n    );\n\n    console.log(this.state.tasksArray);\n    //e.target.reset();\n    e.target.submit();\n  }\n\n  render() {\n    //localStorage.removeItem(\"tasksArray\");\n    //localStorage.clear();\n    localStorage.setItem(\"tasksArray\", JSON.stringify(this.state.tasksArray));\n    console.log(this.state.tasksArray);\n\n    //console.log(JSON.parse(localStorage.getItem(\"tasksArray\")));\n    return (\n      <div>\n        <InputForm\n          //item={this.cache}\n          //handleNoSubmission={this.handleNoSubmission}\n          handleSubmit={this.handleSubmit}\n        />\n        <TodoState tasksArray={this.state.tasksArray} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport css from \"./App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}